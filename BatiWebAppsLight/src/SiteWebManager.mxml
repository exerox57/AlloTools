<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="50%" height="50%">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.HierarchicalData;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			
			/**
			 * Objet de communication entre php et flex
			 */
			private var gateway:RemoteObject;
			
			/**
			 * La méthode qui PHP qui fait le pont
			 */
			private var operation:String = "siteWebManagerCommand";
			
			/**
			 * Raccourci sur l'opération
			 */
			private var sender:AbstractOperation;
			
			
			/**
			 * Initialise le module :
			 * - Initialisation de l'interface
			 * - Création du pont de communication flex php
			 * - Envoi d'une commande à php pour récupérer les données du site
			 */
			public function init():void {
				gateway = new RemoteObject("onLine");
				gateway.source = "BatiWebAppsLightGate";
				gateway.showBusyCursor = true;
				gateway.addEventListener(FaultEvent.FAULT, faultRequest, false, 0, true);
				configureEventListeners(gateway, false);
				sender = gateway.getOperation(operation);
				sender.send("init");
				
				// ... TODO
			}
			
			/**
			 * Décharge le composant
			 */
			public function free():void {
				sender.send('kill');
				configureEventListeners(gateway, true);
				gateway.removeEventListener(FaultEvent.FAULT, faultRequest);
				// ... TODO
			}
			
			/**
			 * Gestion des evts pour la communication
			 */
			private function configureEventListeners(ro:RemoteObject, remove:Boolean):void {
				if (remove) ro.getOperation(operation).removeEventListener(ResultEvent.RESULT, dataReceived);
				ro.getOperation(operation).addEventListener(ResultEvent.RESULT, dataReceived, false, 0, true);
			}
			
			/**
			 * Retour d'une requête PHP
			 */
			private function dataReceived(event:ResultEvent):void {
				var obj:Object = event.result as Object;
				if(obj != null){
					var name:String;
					for(name in obj){
						switch(name){
							case "listPage":
								adgArticle.dataProvider = obj[name];
								
								var h:HierarchicalData = new HierarchicalData(obj[name]);
								h.childrenField = 'children';
								adgArticle.dataProvider = h;
								break;
							case "listMenu":
								adgMenu.dataProvider = obj[name];
								
								var h1:HierarchicalData = new HierarchicalData(obj[name]);
								h1.childrenField = 'children';
								adgMenu.dataProvider = h1;
								break;
							case "article":
								titreArticle.text = obj[name]["titre"];
								introArticle.text = obj[name]["intro"];
								contentArticle.text = obj[name]["contenu"];
								break;
							case "menu":
								titreMenu.text = obj[name]["titre"];
								lienMenu.text = obj[name]["lien"];
								break;
							case "error":
								Alert.show(obj[name], 'Erreur');
								break;
						}
					}
					
				}
			}
			
			/**
			 * Affichage des erreurs de communications
			 */
			private function faultRequest(event:FaultEvent):void{
				Alert.show(event.fault.faultDetail+"\n"+event.fault.faultString,event.fault.faultCode);
			}
			
			
			private function clickArticleDg(event:ListEvent):void{
				var id:String = adgArticle.selectedItem["id"] ;
				sender.send("openArticle", id);
				
				/* comm javascript
				ExternalInterface.addCallback("err", err);
				ExternalInterface.call("eddd", );*/
			}
			
			private function clickMenuDg(event:ListEvent):void{
				var id:String = adgMenu.selectedItem["id"] ;
				sender.send("openMenu", id);
				
			}
			private function clickModifierArticle(event:MouseEvent):void{
				var parameters:Object = new Object();
				parameters.id = adgArticle.selectedItem["id"] ;
				parameters.titre = this.titreArticle.text ;
				parameters.intro = this.introArticle.text ;
				parameters.fulltext = this.contentArticle.text ;
				
				sender.send("updateArticle", parameters);
			}
			private function clickSupprimerArticle(event:MouseEvent):void{
				
			}
			
			private function clickModifierMenu(event:MouseEvent):void{
				var parameters:Object = new Object();
				parameters.id = adgMenu.selectedItem["id"] ;
				parameters.titre = this.titreMenu.text ;
				parameters.lien = this.lienMenu.text ;
				
				sender.send("updateMenu", parameters);
			}
			private function clickSupprimerMenu(event:MouseEvent):void{
				var id:String = adgMenu.selectedItem["id"] ;
				sender.send("supprimerMenu", id);
			}
		]]>
	</mx:Script>
	
	<mx:HBox id="tables">
		<mx:Label text="ARTICLES" />
		<mx:AdvancedDataGrid id="adgArticle" width="300" designViewDataType="tree" displayItemsExpanded="true" itemClick="clickArticleDg(event)">
			<mx:columns>
				<mx:AdvancedDataGridColumn  headerText="Id page" dataField="id" />
				<mx:AdvancedDataGridColumn headerText="Libellé" dataField="lib" />
			</mx:columns>
		</mx:AdvancedDataGrid>
		
		<mx:Label text="MENUS" />
		<mx:AdvancedDataGrid id="adgMenu" width="300" designViewDataType="tree" displayItemsExpanded="true" itemClick="clickMenuDg(event)">
			<mx:columns>
				<mx:AdvancedDataGridColumn  headerText="Id page" dataField="id" />
				<mx:AdvancedDataGridColumn headerText="Libellé" dataField="lib" />
			</mx:columns>
		</mx:AdvancedDataGrid>
	</mx:HBox>
	
	
	
	<mx:HBox id="hbTitre">
		<mx:Label text="Titre :" />
		<mx:TextInput id="titreArticle" />
		<mx:Button label="Modifier" click="clickModifierArticle(event)" />
		<mx:Button label="Supprimer" click="clickSupprimerArticle(event)" />
		
		<mx:Label text="Titre :" />
		<mx:TextInput id="titreMenu" />
		<mx:Button label="Modifier" click="clickModifierMenu(event)" />
		<mx:Button label="Supprimer" click="clickSupprimerMenu(event)" />
	</mx:HBox>
	
	
	<mx:HBox width="100%">
		<mx:Label text="Intro :" />
		<mx:TextInput id="introArticle" />
		<mx:Label text="____________________________" />
		<mx:Label text="Lien :" />
		<mx:TextInput id="lienMenu" />
	</mx:HBox>
	

	
	<mx:RichTextEditor id="contentArticle" />
	
</mx:VBox>



